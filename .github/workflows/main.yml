# 工作流名称
name: Update Shadowrocket Rules

# 触发条件
on:
  # 每天北京时间早上5点执行一次 (UTC时间前一天的21点)
  schedule:
    - cron: '0 21 * * *'
  # 允许在 Actions 页面手动触发此工作流
  workflow_dispatch:

jobs:
  build:
    # 使用最新的 Ubuntu 系统作为运行环境
    runs-on: ubuntu-latest

    steps:
      # 第一步：检出你的仓库代码，这样脚本才能访问到仓库里的文件
      - name: Checkout repository
        uses: actions/checkout@v3

      # 第二步：运行合并脚本
      - name: Consolidate rules
        run: |
          # 设置-e，让脚本在任何命令失败时立即退出
          set -e

          # 定义源文件和最终输出文件
          SOURCE_FILE="rules.txt"
          OUTPUT_FILE="list_total.list"

          # 开始前先清空输出文件，并写入一个注释头
          echo "# Total rules list for Shadowrocket" > $OUTPUT_FILE
          echo "# Generated on $(date -u)" >> $OUTPUT_FILE
          echo "# Do not edit this file manually." >> $OUTPUT_FILE
          echo "" >> $OUTPUT_FILE

          # 逐行读取 rules.txt 文件
          while IFS= read -r url || [[ -n "$url" ]]; do
            # 忽略空行和以#开头的注释行
            if [[ -z "$url" || "$url" =~ ^# ]]; then
              continue
            fi

            # 打印当前正在处理的URL
            echo "Fetching rules from $url"

            # 在最终文件中添加一个源URL的注释，方便调试
            echo -e "\n# From: $url" >> $OUTPUT_FILE

            # 使用 curl 下载规则内容并追加到输出文件中
            # -s: 静默模式 -L: 跟随重定向
            curl -sL "$url" >> $OUTPUT_FILE
          done < "$SOURCE_FILE"

          echo "All rules have been consolidated into $OUTPUT_FILE"

      # 第三步：提交并推送到仓库
      - name: Commit and push changes
        run: |
          # 配置 Git 用户信息
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # 将生成的文件添加到暂存区
          git add list_total.list

          # 检查是否有变动，只有在文件内容改变时才进行提交
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            # 提交变动
            git commit -m "chore: Auto-update rules on $(date)"
            # 推送到主分支
            git push
          fi
